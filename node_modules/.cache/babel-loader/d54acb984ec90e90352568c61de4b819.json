{"ast":null,"code":"var _jsxFileName = \"/Users/aamnv/js/reactjs/c-fdev/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'Foo',\n        artist: 'Bar',\n        album: 'Codin',\n        id: '39'\n      }],\n      playListName: 'New Playlist',\n      playListTracks: [{\n        name: 'Beg',\n        artist: 'Aadhi',\n        album: 'Names',\n        id: '45'\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playListTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      this.setState({\n        playListTracks: this.state.playListTracks.push(track)\n      });\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playListTracks;\n    tracks = tracks.filter(current => current.id !== track.id);\n    this.setState({\n      playListTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playListName: name\n    });\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(results => this.setState({\n      searchResults: results\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Ja\", React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Playlist, {\n      playListName: this.state.playListName,\n      playListTracks: this.state.playListTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aamnv/js/reactjs/c-fdev/jammming/src/Components/App/App.js"],"names":["React","Playlist","SearchBar","SearchResults","Spotify","App","Component","constructor","props","state","searchResults","name","artist","album","id","playListName","playListTracks","addTrack","bind","removeTrack","updatePlaylistName","track","find","savedTrack","setState","push","tracks","filter","current","search","searchTerm","then","results","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist'\nimport SearchBar from '../SearchBar/SearchBar'\nimport SearchResults from '../SearchResults/SearchResults'\nimport Spotify from '../../util/Spotify'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{name: 'Foo', artist: 'Bar', album: 'Codin', id: '39'}],\n      playListName: 'New Playlist',\n      playListTracks: [{name: 'Beg', artist: 'Aadhi', album: 'Names', id: '45'}]\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  }\n\n  addTrack(track) {\n    if (this.state.playListTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      this.setState({playListTracks: this.state.playListTracks.push(track)});\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playListTracks;\n    tracks = tracks.filter(current => current.id !== track.id);\n    this.setState({playListTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playListName: name});\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm)\n      .then(results => this.setState({searchResults: results}))\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist \n              playListName={this.state.playListName} \n              playListTracks={this.state.playListTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}