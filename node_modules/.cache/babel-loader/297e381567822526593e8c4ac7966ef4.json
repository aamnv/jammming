{"ast":null,"code":"var _jsxFileName = \"/Users/aamnv/js/reactjs/c-fdev/jammming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playListName: 'New Playlist',\n      playListTracks: [],\n      trackURIs: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  }\n\n  savePlaylist() {\n    this.state.playlistTracks.map(track => this.state.trackURIs.push(track.uri));\n    Spotify.savePlaylist(this.state.playlistName, this.state.trackURIs);\n  }\n\n  addTrack(track) {\n    if (this.state.playListTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      this.setState({\n        playListTracks: this.state.playListTracks.push(track)\n      });\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playListTracks;\n    tracks = tracks.filter(current => current.id !== track.id);\n    this.setState({\n      playListTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playListName: name\n    });\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(results => this.setState({\n      searchResults: results\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Ja\", React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Playlist, {\n      playListName: this.state.playListName,\n      playListTracks: this.state.playListTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aamnv/js/reactjs/c-fdev/jammming/src/Components/App/App.js"],"names":["React","Playlist","SearchBar","SearchResults","Spotify","App","Component","constructor","props","state","searchResults","playListName","playListTracks","trackURIs","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","playlistTracks","map","track","push","uri","playlistName","find","savedTrack","id","setState","tracks","filter","current","name","search","searchTerm","then","results","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Playlist from '../Playlist/Playlist'\nimport SearchBar from '../SearchBar/SearchBar'\nimport SearchResults from '../SearchResults/SearchResults'\nimport Spotify from '../../util/Spotify'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playListName: 'New Playlist',\n      playListTracks: [],\n      trackURIs: []\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  }\n\n  savePlaylist(){\n    this.state.playlistTracks.map(track => this.state.trackURIs.push(track.uri));\n    Spotify.savePlaylist(this.state.playlistName, this.state.trackURIs)\n      }\n\n  addTrack(track) {\n    if (this.state.playListTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      this.setState({playListTracks: this.state.playListTracks.push(track)});\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playListTracks;\n    tracks = tracks.filter(current => current.id !== track.id);\n    this.setState({playListTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playListName: name});\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm)\n      .then(results => this.setState({searchResults: results}))\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist \n              playListName={this.state.playListName} \n              playListTracks={this.state.playListTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}